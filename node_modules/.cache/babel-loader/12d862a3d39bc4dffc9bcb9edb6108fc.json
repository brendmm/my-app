{"ast":null,"code":"export function myAdversary(state, level) {\n  let gameState = Object.assign({}, state);\n  let score = 0;\n  let available = [];\n  let comparer = {\n    tl: 0,\n    tc: 0,\n    tr: 0,\n    cl: 0,\n    cc: 0,\n    cr: 0,\n    bl: 0,\n    bc: 0,\n    br: 0\n  };\n\n  if (gameState.topLeftValue === gameState.topCenterValue && gameState.topLeftValue === gameState.topRightValue && gameState.topLeftValue === 'O' || gameState.centerLeftValue === gameState.centerCenterValue && gameState.centerLeftValue === gameState.centerRightValue && gameState.centerLeftValue === 'O' || gameState.bottomLeftValue === gameState.bottomCenterValue && gameState.bottomLeftValue === gameState.bottomRightValue && gameState.bottomLeftValue === 'O' || gameState.topLeftValue === gameState.centerLeftValue && gameState.topLeftValue === gameState.bottomLeftValue && gameState.topLeftValue === 'O' || gameState.topCenterValue === gameState.centerCenterValue && gameState.topCenterValue === gameState.bottomCenterValue && gameState.topCenterValue === 'O' || gameState.topRightValue === gameState.centerRightValue && gameState.topRightValue === gameState.bottomRightValue && gameState.topRightValue === 'O' || gameState.topLeftValue === gameState.centerCenterValue && gameState.topLeftValue === gameState.bottomRightValue && gameState.topLeftValue === 'O' || gameState.topRightValue === gameState.centerCenterValue && gameState.topRightValue === gameState.bottomLeftValue && gameState.topRightValue === 'O') {\n    return [null, 10];\n  }\n\n  if (gameState.topLeftValue === gameState.topCenterValue && gameState.topLeftValue === gameState.topRightValue && gameState.topLeftValue === 'X' || gameState.centerLeftValue === gameState.centerCenterValue && gameState.centerLeftValue === gameState.centerRightValue && gameState.centerLeftValue === 'X' || gameState.bottomLeftValue === gameState.bottomCenterValue && gameState.bottomLeftValue === gameState.bottomRightValue && gameState.bottomLeftValue === 'X' || gameState.topLeftValue === gameState.centerLeftValue && gameState.topLeftValue === gameState.bottomLeftValue && gameState.topLeftValue === 'X' || gameState.topCenterValue === gameState.centerCenterValue && gameState.topCenterValue === gameState.bottomCenterValue && gameState.topCenterValue === 'X' || gameState.topRightValue === gameState.centerRightValue && gameState.topRightValue === gameState.bottomRightValue && gameState.topRightValue === 'X' || gameState.topLeftValue === gameState.centerCenterValue && gameState.topLeftValue === gameState.bottomRightValue && gameState.topLeftValue === 'X' || gameState.topRightValue === gameState.centerCenterValue && gameState.topRightValue === gameState.bottomLeftValue && gameState.topRightValue === 'X') {\n    return [null, -1];\n  }\n\n  if (gameState.topLeftValue !== \" \" && gameState.topCenterValue !== \" \" && gameState.topRightValue !== \" \" && gameState.centerLeftValue !== \" \" && gameState.centerCenterValue !== \" \" && gameState.centerRightValue !== \" \" && gameState.bottomLeftValue !== \" \" && gameState.bottomCenterValue !== \" \" && gameState.bottomRightValue !== \" \") {\n    return [null, 0];\n  }\n\n  if (gameState.topLeftValue === \" \") {\n    available.push('tl');\n  }\n\n  if (gameState.topCenterValue === \" \") {\n    available.push('tc');\n  }\n\n  if (gameState.topRightValue === \" \") {\n    available.push('tr');\n  }\n\n  if (gameState.centerLeftValue === \" \") {\n    available.push('cl');\n  }\n\n  if (gameState.centerCenterValue === \" \") {\n    available.push('cc');\n  }\n\n  if (gameState.centerRightValue === \" \") {\n    available.push('cr');\n  }\n\n  if (gameState.bottomLeftValue === \" \") {\n    available.push('bl');\n  }\n\n  if (gameState.bottomCenterValue === \" \") {\n    available.push('bc');\n  }\n\n  if (gameState.bottomRightValue === \" \") {\n    available.push('br');\n  }\n\n  if (gameState.move === 1) {\n    for (let i = 0; i < available.length; i++) {\n      if (available[i] === 'tl') {\n        gameState.move = 0;\n        gameState.topLeftValue = 'X';\n        comparer.tl = score + myAdversary(gameState, level + 1)[1];\n        gameState.topLeftValue = ' ';\n        gameState.move = 1;\n      }\n\n      if (available[i] === 'tc') {\n        gameState.move = 0;\n        gameState.topCenterValue = 'X';\n        comparer.tc = score + myAdversary(gameState, level + 1)[1];\n        gameState.topCenterValue = ' ';\n        gameState.move = 1;\n      }\n\n      if (available[i] === 'tr') {\n        gameState.move = 0;\n        gameState.topRightValue = 'X';\n        comparer.tr = score + myAdversary(gameState, level + 1)[1];\n        gameState.topRightValue = ' ';\n        gameState.move = 1;\n      }\n\n      if (available[i] === 'cl') {\n        gameState.move = 0;\n        gameState.centerLeftValue = 'X';\n        comparer.cl = score + myAdversary(gameState, level + 1)[1];\n        gameState.centerLeftValue = ' ';\n        gameState.move = 1;\n      }\n\n      if (available[i] === 'cc') {\n        gameState.move = 0;\n        gameState.centerCenterValue = 'X';\n        comparer.cc = score + myAdversary(gameState, level + 1)[1];\n        gameState.centerCenterValue = ' ';\n        gameState.move = 1;\n      }\n\n      if (available[i] === 'cr') {\n        gameState.move = 0;\n        gameState.centerRightValue = 'X';\n        comparer.cr = score + myAdversary(gameState, level + 1)[1];\n        gameState.centerRightValue = ' ';\n        gameState.move = 1;\n      }\n\n      if (available[i] === 'bl') {\n        gameState.move = 0;\n        gameState.bottomLeftValue = 'X';\n        comparer.bl = score + myAdversary(gameState, level + 1)[1];\n        gameState.bottomLeftValue = ' ';\n        gameState.move = 1;\n      }\n\n      if (available[i] === 'bc') {\n        gameState.move = 0;\n        gameState.bottomCenterValue = 'X';\n        comparer.bc = score + myAdversary(gameState, level + 1)[1];\n        gameState.bottomCenterValue = ' ';\n        gameState.move = 1;\n      }\n\n      if (available[i] === 'br') {\n        gameState.move = 0;\n        gameState.bottomRightValue = 'X';\n        comparer.br = score + myAdversary(gameState, level + 1)[1];\n        gameState.bottomRightValue = ' ';\n        gameState.move = 1;\n      }\n    }\n\n    let max = Number.POSITIVE_INFINITY;\n    let move = null;\n\n    for (let i = 0; i < available.length; i++) {\n      if (available[i] === 'tl') {\n        if (comparer.tl <= max) {\n          max = comparer.tl;\n          move = 'tl';\n        }\n      }\n\n      if (available[i] === 'tc') {\n        if (comparer.tc <= max) {\n          max = comparer.tc;\n          move = 'tc';\n        }\n      }\n\n      if (available[i] === 'tr') {\n        if (comparer.tr <= max) {\n          max = comparer.tr;\n          move = 'tr';\n        }\n      }\n\n      if (available[i] === 'cl') {\n        if (comparer.cl <= max) {\n          max = comparer.cl;\n          move = 'cl';\n        }\n      }\n\n      if (available[i] === 'cc') {\n        if (comparer.cc <= max) {\n          max = comparer.cc;\n          move = 'cc';\n        }\n      }\n\n      if (available[i] === 'cr') {\n        if (comparer.cr <= max) {\n          max = comparer.cr;\n          move = 'cr';\n        }\n      }\n\n      if (available[i] === 'bl') {\n        if (comparer.bl <= max) {\n          max = comparer.bl;\n          move = 'bl';\n        }\n      }\n\n      if (available[i] === 'bc') {\n        if (comparer.bc <= max) {\n          max = comparer.bc;\n          move = 'bc';\n        }\n      }\n\n      if (available[i] === 'br') {\n        if (comparer.br <= max) {\n          max = comparer.br;\n          move = 'br';\n        }\n      }\n    }\n\n    let value = comparer.tl + comparer.tc + comparer.tr + comparer.bl + comparer.bc + comparer.br + comparer.cl + comparer.cc + comparer.cr;\n    return [move, value / level];\n  }\n\n  if (gameState.move === 0) {\n    for (let i = 0; i < available.length; i++) {\n      if (available[i] === 'tl') {\n        gameState.move = 1;\n        gameState.topLeftValue = 'O';\n        comparer.tl = score + myAdversary(gameState, level + 1)[1];\n        gameState.topLeftValue = ' ';\n        gameState.move = 0;\n      }\n\n      if (available[i] === 'tc') {\n        gameState.move = 1;\n        gameState.topCenterValue = 'O';\n        comparer.tc = score + myAdversary(gameState, level + 1)[1];\n        gameState.topCenterValue = ' ';\n        gameState.move = 0;\n      }\n\n      if (available[i] === 'tr') {\n        gameState.move = 1;\n        gameState.topRightValue = 'O';\n        comparer.tr = score + myAdversary(gameState, level + 1)[1];\n        gameState.topRightValue = ' ';\n        gameState.move = 0;\n      }\n\n      if (available[i] === 'cl') {\n        gameState.move = 1;\n        gameState.centerLeftValue = 'O';\n        comparer.cl = score + myAdversary(gameState, level + 1)[1];\n        gameState.centerLeftValue = ' ';\n        gameState.move = 0;\n      }\n\n      if (available[i] === 'cc') {\n        gameState.move = 1;\n        gameState.centerCenterValue = 'O';\n        comparer.cc = score + myAdversary(gameState, level + 1)[1];\n        gameState.centerCenterValue = ' ';\n        gameState.move = 0;\n      }\n\n      if (available[i] === 'cr') {\n        gameState.move = 1;\n        gameState.centerRightValue = 'O';\n        comparer.cr = score + myAdversary(gameState, level + 1)[1];\n        gameState.centerRightValue = ' ';\n        gameState.move = 0;\n      }\n\n      if (available[i] === 'bl') {\n        gameState.move = 1;\n        gameState.bottomLeftValue = 'O';\n        comparer.bl = score + myAdversary(gameState, level + 1)[1];\n        gameState.bottomLeftValue = ' ';\n        gameState.move = 0;\n      }\n\n      if (available[i] === 'bc') {\n        gameState.move = 1;\n        gameState.bottomCenterValue = 'O';\n        comparer.bc = score + myAdversary(gameState, level + 1)[1];\n        gameState.bottomCenterValue = ' ';\n        gameState.move = 0;\n      }\n\n      if (available[i] === 'br') {\n        gameState.move = 1;\n        gameState.bottomRightValue = 'O';\n        comparer.br = score + myAdversary(gameState, level + 1)[1];\n        gameState.bottomRightValue = ' ';\n        gameState.move = 0;\n      }\n    }\n\n    let max = Number.NEGATIVE_INFINITY;\n    let move = null;\n\n    for (let i = 0; i < available.length; i++) {\n      if (available[i] === 'tl') {\n        if (comparer.tl >= max) {\n          max = comparer.tl;\n          move = 'tl';\n        }\n      }\n\n      if (available[i] === 'tc') {\n        if (comparer.tc >= max) {\n          max = comparer.tc;\n          move = 'tc';\n        }\n      }\n\n      if (available[i] === 'tr') {\n        if (comparer.tr >= max) {\n          max = comparer.tr;\n          move = 'tr';\n        }\n      }\n\n      if (available[i] === 'cl') {\n        if (comparer.cl >= max) {\n          max = comparer.cl;\n          move = 'cl';\n        }\n      }\n\n      if (available[i] === 'cc') {\n        if (comparer.cc >= max) {\n          max = comparer.cc;\n          move = 'cc';\n        }\n      }\n\n      if (available[i] === 'cr') {\n        if (comparer.cr >= max) {\n          max = comparer.cr;\n          move = 'cr';\n        }\n      }\n\n      if (available[i] === 'bl') {\n        if (comparer.bl >= max) {\n          max = comparer.bl;\n          move = 'bl';\n        }\n      }\n\n      if (available[i] === 'bc') {\n        if (comparer.bc >= max) {\n          max = comparer.bc;\n          move = 'bc';\n        }\n      }\n\n      if (available[i] === 'br') {\n        if (comparer.br >= max) {\n          max = comparer.br;\n          move = 'br';\n        }\n      }\n    }\n\n    let value = comparer.tl + comparer.tc + comparer.tr + comparer.bl + comparer.bc + comparer.br + comparer.cl + comparer.cc + comparer.cr;\n    return [move, value / level];\n  }\n}","map":{"version":3,"sources":["C:/Users/brend/Documents/Professional/my-app/src/tictactoe/util/adversary.js"],"names":["myAdversary","state","level","gameState","Object","assign","score","available","comparer","tl","tc","tr","cl","cc","cr","bl","bc","br","topLeftValue","topCenterValue","topRightValue","centerLeftValue","centerCenterValue","centerRightValue","bottomLeftValue","bottomCenterValue","bottomRightValue","push","move","i","length","max","Number","POSITIVE_INFINITY","value","NEGATIVE_INFINITY"],"mappings":"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","sourcesContent":["export function myAdversary(state, level){\n    let gameState = Object.assign({}, state);\n    let score = 0;\n    let available = [];\n    let comparer = {\n        tl: 0,\n        tc: 0,\n        tr: 0,\n        cl: 0,\n        cc: 0,\n        cr: 0,\n        bl: 0,\n        bc: 0,\n        br: 0\n    };\n\n    if(\n        ((gameState.topLeftValue === gameState.topCenterValue) && (gameState.topLeftValue  === gameState.topRightValue) && (gameState.topLeftValue === 'O')) ||\n        ((gameState.centerLeftValue === gameState.centerCenterValue) && (gameState.centerLeftValue === gameState.centerRightValue) && (gameState.centerLeftValue === 'O')) ||\n        ((gameState.bottomLeftValue === gameState.bottomCenterValue) && (gameState.bottomLeftValue === gameState.bottomRightValue) && (gameState.bottomLeftValue === 'O')) ||\n        ((gameState.topLeftValue === gameState.centerLeftValue) && (gameState.topLeftValue  === gameState.bottomLeftValue) && (gameState.topLeftValue === 'O')) ||\n        ((gameState.topCenterValue === gameState.centerCenterValue) && (gameState.topCenterValue === gameState.bottomCenterValue) && (gameState.topCenterValue === 'O')) ||\n        ((gameState.topRightValue === gameState.centerRightValue) && (gameState.topRightValue  === gameState.bottomRightValue) && (gameState.topRightValue === 'O')) ||\n        ((gameState.topLeftValue === gameState.centerCenterValue) && (gameState.topLeftValue  === gameState.bottomRightValue) && (gameState.topLeftValue === 'O')) ||\n        ((gameState.topRightValue === gameState.centerCenterValue) && (gameState.topRightValue === gameState.bottomLeftValue) && (gameState.topRightValue === 'O'))\n    ){\n        return [null, 10]\n    }\n    if(\n        ((gameState.topLeftValue === gameState.topCenterValue) && (gameState.topLeftValue  === gameState.topRightValue) && (gameState.topLeftValue === 'X')) ||\n        ((gameState.centerLeftValue === gameState.centerCenterValue) && (gameState.centerLeftValue === gameState.centerRightValue) && (gameState.centerLeftValue === 'X')) ||\n        ((gameState.bottomLeftValue === gameState.bottomCenterValue) && (gameState.bottomLeftValue === gameState.bottomRightValue) && (gameState.bottomLeftValue === 'X')) ||\n        ((gameState.topLeftValue === gameState.centerLeftValue) && (gameState.topLeftValue  === gameState.bottomLeftValue) && (gameState.topLeftValue === 'X')) ||\n        ((gameState.topCenterValue === gameState.centerCenterValue) && (gameState.topCenterValue === gameState.bottomCenterValue) && (gameState.topCenterValue === 'X')) ||\n        ((gameState.topRightValue === gameState.centerRightValue) && (gameState.topRightValue  === gameState.bottomRightValue) && (gameState.topRightValue === 'X')) ||\n        ((gameState.topLeftValue === gameState.centerCenterValue) && (gameState.topLeftValue  === gameState.bottomRightValue) && (gameState.topLeftValue === 'X')) ||\n        ((gameState.topRightValue === gameState.centerCenterValue) && (gameState.topRightValue === gameState.bottomLeftValue) && (gameState.topRightValue === 'X'))\n    ){\n        return [null, -1]\n    }\n    if(\n        (gameState.topLeftValue !== \" \") && (gameState.topCenterValue !== \" \") && (gameState.topRightValue !== \" \") && \n        (gameState.centerLeftValue !== \" \") && (gameState.centerCenterValue !== \" \") && (gameState.centerRightValue !== \" \") && \n        (gameState.bottomLeftValue !== \" \") && (gameState.bottomCenterValue !== \" \") && (gameState.bottomRightValue !== \" \")\n    ){\n        return [null, 0]\n    }\n    if(gameState.topLeftValue === \" \"){\n        available.push('tl')\n    }\n    if(gameState.topCenterValue === \" \"){\n        available.push('tc')\n    }\n    if(gameState.topRightValue === \" \"){\n        available.push('tr')\n    }\n    if(gameState.centerLeftValue === \" \"){\n        available.push('cl')\n    }\n    if(gameState.centerCenterValue === \" \"){\n        available.push('cc')\n    }\n    if(gameState.centerRightValue === \" \"){\n        available.push('cr')\n    }\n    if(gameState.bottomLeftValue === \" \"){\n        available.push('bl')\n    }\n    if(gameState.bottomCenterValue === \" \"){\n        available.push('bc')\n    }\n    if(gameState.bottomRightValue === \" \"){\n        available.push('br')\n    }\n    if(gameState.move === 1){\n        for(let i =0; i < available.length; i++){\n            if(available[i]==='tl'){\n                gameState.move = 0;\n                gameState.topLeftValue = 'X';\n                comparer.tl= score + myAdversary(gameState, level+1)[1]\n                gameState.topLeftValue = ' ';\n                gameState.move = 1;\n            }\n            if(available[i]==='tc'){\n                gameState.move = 0;\n                gameState.topCenterValue = 'X';\n                comparer.tc= score + myAdversary(gameState, level+1)[1]\n                gameState.topCenterValue = ' ';\n                gameState.move = 1;\n            }\n            if(available[i]==='tr'){\n                gameState.move = 0;\n                gameState.topRightValue = 'X';\n                comparer.tr= score + myAdversary(gameState, level+1)[1]\n                gameState.topRightValue = ' ';\n                gameState.move = 1;\n            }\n            if(available[i]==='cl'){\n                gameState.move = 0;\n                gameState.centerLeftValue = 'X';\n                comparer.cl= score + myAdversary(gameState, level+1)[1]\n                gameState.centerLeftValue = ' ';\n                gameState.move = 1;\n            }\n            if(available[i]==='cc'){\n                gameState.move = 0;\n                gameState.centerCenterValue = 'X';\n                comparer.cc= score + myAdversary(gameState, level+1)[1]\n                gameState.centerCenterValue = ' ';\n                gameState.move = 1;\n            }\n            if(available[i]==='cr'){\n                gameState.move = 0;\n                gameState.centerRightValue = 'X';\n                comparer.cr= score + myAdversary(gameState, level+1)[1]\n                gameState.centerRightValue = ' ';\n                gameState.move = 1;\n            }\n            if(available[i]==='bl'){\n                gameState.move = 0;\n                gameState.bottomLeftValue = 'X';\n                comparer.bl= score + myAdversary(gameState, level+1)[1]\n                gameState.bottomLeftValue = ' ';\n                gameState.move = 1;\n            }\n            if(available[i]==='bc'){\n                gameState.move = 0;\n                gameState.bottomCenterValue = 'X';\n                comparer.bc= score + myAdversary(gameState, level+1)[1]\n                gameState.bottomCenterValue = ' ';\n                gameState.move = 1;\n            }\n            if(available[i]==='br'){\n                gameState.move = 0;\n                gameState.bottomRightValue = 'X';\n                comparer.br= score + myAdversary(gameState, level+1)[1]\n                gameState.bottomRightValue = ' ';\n                gameState.move = 1;\n            }\n        }\n\n        let max = Number.POSITIVE_INFINITY\n        let move = null\n\n        for(let i =0; i < available.length; i++){\n            if(available[i]==='tl'){\n                if(comparer.tl <= max){\n                    max = comparer.tl\n                    move = 'tl'\n                }\n            }\n            if(available[i]==='tc'){\n                if(comparer.tc <= max){\n                    max = comparer.tc\n                    move = 'tc'\n                }\n            }\n            if(available[i]==='tr'){\n                if(comparer.tr <= max){\n                    max = comparer.tr\n                    move = 'tr'\n                }\n            }\n            if(available[i]==='cl'){\n                if(comparer.cl <= max){\n                    max = comparer.cl\n                    move = 'cl'\n                }\n            }\n            if(available[i]==='cc'){\n                if(comparer.cc <= max){\n                    max = comparer.cc\n                    move = 'cc'\n                }\n            }\n            if(available[i]==='cr'){\n                if(comparer.cr <= max){\n                    max = comparer.cr\n                    move = 'cr'\n                }\n            }\n            if(available[i]==='bl'){\n                if(comparer.bl <= max){\n                    max = comparer.bl\n                    move = 'bl'\n                }\n            }\n            if(available[i]==='bc'){\n                if(comparer.bc <= max){\n                    max = comparer.bc\n                    move = 'bc'\n                }\n            }\n            if(available[i]==='br'){\n                if(comparer.br <= max){\n                    max = comparer.br\n                    move = 'br'\n                }\n            }\n        }\n        let value = comparer.tl+comparer.tc+comparer.tr+comparer.bl+comparer.bc+comparer.br+comparer.cl+comparer.cc+comparer.cr;\n        return [move, value/ level]\n    }\n    if(gameState.move === 0){\n        for(let i =0; i < available.length; i++){\n            if(available[i]==='tl'){\n                gameState.move = 1;\n                gameState.topLeftValue = 'O';\n                comparer.tl= score + myAdversary(gameState, level+1)[1]\n                gameState.topLeftValue = ' ';\n                gameState.move = 0;\n            }\n            if(available[i]==='tc'){\n                gameState.move = 1;\n                gameState.topCenterValue = 'O';\n                comparer.tc= score + myAdversary(gameState, level+1)[1]\n                gameState.topCenterValue = ' ';\n                gameState.move = 0;\n            }\n            if(available[i]==='tr'){\n                gameState.move = 1;\n                gameState.topRightValue = 'O';\n                comparer.tr= score + myAdversary(gameState, level+1)[1]\n                gameState.topRightValue = ' ';\n                gameState.move = 0;\n            }\n            if(available[i]==='cl'){\n                gameState.move = 1;\n                gameState.centerLeftValue = 'O';\n                comparer.cl= score + myAdversary(gameState, level+1)[1]\n                gameState.centerLeftValue = ' ';\n                gameState.move = 0;\n            }\n            if(available[i]==='cc'){\n                gameState.move = 1;\n                gameState.centerCenterValue = 'O';\n                comparer.cc= score + myAdversary(gameState, level+1)[1]\n                gameState.centerCenterValue = ' ';\n                gameState.move = 0;\n            }\n            if(available[i]==='cr'){\n                gameState.move = 1;\n                gameState.centerRightValue = 'O';\n                comparer.cr= score + myAdversary(gameState, level+1)[1]\n                gameState.centerRightValue = ' ';\n                gameState.move = 0;\n            }\n            if(available[i]==='bl'){\n                gameState.move = 1;\n                gameState.bottomLeftValue = 'O';\n                comparer.bl= score + myAdversary(gameState, level+1)[1]\n                gameState.bottomLeftValue = ' ';\n                gameState.move = 0;\n            }\n            if(available[i]==='bc'){\n                gameState.move = 1;\n                gameState.bottomCenterValue = 'O';\n                comparer.bc= score + myAdversary(gameState, level+1)[1]\n                gameState.bottomCenterValue = ' ';\n                gameState.move = 0;\n            }\n            if(available[i]==='br'){\n                gameState.move = 1;\n                gameState.bottomRightValue = 'O';\n                comparer.br= score + myAdversary(gameState, level+1)[1]\n                gameState.bottomRightValue = ' ';\n                gameState.move = 0;\n            }\n        }\n        let max = Number.NEGATIVE_INFINITY\n        let move = null\n        for(let i =0; i < available.length; i++){\n            if(available[i]==='tl'){\n                if(comparer.tl >= max){\n                    max = comparer.tl\n                    move = 'tl'\n                }\n            }\n            if(available[i]==='tc'){\n                if(comparer.tc >= max){\n                    max = comparer.tc\n                    move = 'tc'\n                }\n            }\n            if(available[i]==='tr'){\n                if(comparer.tr >= max){\n                    max = comparer.tr\n                    move = 'tr'\n                }\n            }\n            if(available[i]==='cl'){\n                if(comparer.cl >= max){\n                    max = comparer.cl\n                    move = 'cl'\n                }\n            }\n            if(available[i]==='cc'){\n                if(comparer.cc >= max){\n                    max = comparer.cc\n                    move = 'cc'\n                }\n            }\n            if(available[i]==='cr'){\n                if(comparer.cr >= max){\n                    max = comparer.cr\n                    move = 'cr'\n                }\n            }\n            if(available[i]==='bl'){\n                if(comparer.bl >= max){\n                    max = comparer.bl\n                    move = 'bl'\n                }\n            }\n            if(available[i]==='bc'){\n                if(comparer.bc >= max){\n                    max = comparer.bc\n                    move = 'bc'\n                }\n            }\n            if(available[i]==='br'){\n                if(comparer.br >= max){\n                    max = comparer.br\n                    move = 'br'\n                }\n            }\n        }\n        let value = comparer.tl+comparer.tc+comparer.tr+comparer.bl+comparer.bc+comparer.br+comparer.cl+comparer.cc+comparer.cr;\n        return [move, value/level]\n    }\n  }"]},"metadata":{},"sourceType":"module"}