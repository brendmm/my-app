{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brend\\\\Documents\\\\Professional\\\\my-app\\\\src\\\\tictactoe\\\\game.js\";\nimport React from 'react';\nimport './game.css';\nimport TopLeft from './boxes/TopLeft.js';\nimport TopCenter from './boxes/TopCenter.js';\nimport TopRight from './boxes/TopRight.js';\nimport CenterLeft from './boxes/CenterLeft.js';\nimport CenterCenter from './boxes/CenterCenter.js';\nimport CenterRight from './boxes/CenterRight.js';\nimport BottomLeft from './boxes/BottomLeft.js';\nimport BottomCenter from './boxes/BottomCenter.js';\nimport BottomRight from './boxes/BottomRight.js';\nimport 'bulma/css/bulma.css';\nimport * as util from './util/adversary';\nlet vsHuman = true;\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateValue = location => {\n      if (this.state.move === 0) {\n        //TOPLEFT\n        if (location === 'topLeft') {\n          if (this.state.topLeftValue === \" \") {\n            this.setState(() => {\n              return {\n                topLeftValue: 'O',\n                move: 1\n              };\n            });\n          }\n        } //TOPCENTER\n\n\n        if (location === 'topCenter') {\n          if (this.state.topCenterValue === \" \") {\n            this.setState(() => {\n              return {\n                topCenterValue: 'O',\n                move: 1\n              };\n            });\n          }\n        } //TOPRIGHT\n\n\n        if (location === 'topRight') {\n          if (this.state.topRightValue === \" \") {\n            this.setState(() => {\n              return {\n                topRightValue: 'O',\n                move: 1\n              };\n            });\n          }\n        } //centerLEFT\n\n\n        if (location === 'centerLeft') {\n          if (this.state.centerLeftValue === \" \") {\n            this.setState(() => {\n              return {\n                centerLeftValue: 'O',\n                move: 1\n              };\n            });\n          }\n        } //centerCENTER\n\n\n        if (location === 'centerCenter') {\n          if (this.state.centerCenterValue === \" \") {\n            this.setState(() => {\n              return {\n                centerCenterValue: 'O',\n                move: 1\n              };\n            });\n          }\n        } //centerRIGHT\n\n\n        if (location === 'centerRight') {\n          if (this.state.centerRightValue === \" \") {\n            this.setState(() => {\n              return {\n                centerRightValue: 'O',\n                move: 1\n              };\n            });\n          }\n        } //bottomLEFT\n\n\n        if (location === 'bottomLeft') {\n          if (this.state.bottomLeftValue === \" \") {\n            this.setState(() => {\n              return {\n                bottomLeftValue: 'O',\n                move: 1\n              };\n            });\n          }\n        } //bottomCENTER\n\n\n        if (location === 'bottomCenter') {\n          if (this.state.bottomCenterValue === \" \") {\n            this.setState(() => {\n              return {\n                bottomCenterValue: 'O',\n                move: 1\n              };\n            });\n          }\n        } //bottomRIGHT\n\n\n        if (location === 'bottomRight') {\n          if (this.state.bottomRightValue === \" \") {\n            this.setState(() => {\n              return {\n                bottomRightValue: 'O',\n                move: 1\n              };\n            });\n          }\n        }\n      } else {\n        //TOPLEFT\n        if (location === 'topLeft') {\n          if (this.state.topLeftValue === \" \") {\n            this.setState(() => {\n              return {\n                topLeftValue: 'X',\n                move: 0\n              };\n            });\n          }\n        } //TOPCENTER\n\n\n        if (location === 'topCenter') {\n          if (this.state.topCenterValue === \" \") {\n            this.setState(() => {\n              return {\n                topCenterValue: 'X',\n                move: 0\n              };\n            });\n          }\n        } //TOPRIGHT\n\n\n        if (location === 'topRight') {\n          if (this.state.topRightValue === \" \") {\n            this.setState(() => {\n              return {\n                topRightValue: 'X',\n                move: 0\n              };\n            });\n          }\n        } //centerLEFT\n\n\n        if (location === 'centerLeft') {\n          if (this.state.centerLeftValue === \" \") {\n            this.setState(() => {\n              return {\n                centerLeftValue: 'X',\n                move: 0\n              };\n            });\n          }\n        } //centerCENTER\n\n\n        if (location === 'centerCenter') {\n          if (this.state.centerCenterValue === \" \") {\n            this.setState(() => {\n              return {\n                centerCenterValue: 'X',\n                move: 0\n              };\n            });\n          }\n        } //centerRIGHT\n\n\n        if (location === 'centerRight') {\n          if (this.state.centerRightValue === \" \") {\n            this.setState(() => {\n              return {\n                centerRightValue: 'X',\n                move: 0\n              };\n            });\n          }\n        } //bottomLEFT\n\n\n        if (location === 'bottomLeft') {\n          if (this.state.bottomLeftValue === \" \") {\n            this.setState(() => {\n              return {\n                bottomLeftValue: 'X',\n                move: 0\n              };\n            });\n          }\n        } //bottomCENTER\n\n\n        if (location === 'bottomCenter') {\n          if (this.state.bottomCenterValue === \" \") {\n            this.setState(() => {\n              return {\n                bottomCenterValue: 'X',\n                move: 0\n              };\n            });\n          }\n        } //bottomRIGHT\n\n\n        if (location === 'bottomRight') {\n          if (this.state.bottomRightValue === \" \") {\n            this.setState(() => {\n              return {\n                bottomRightValue: 'X',\n                move: 0\n              };\n            });\n          }\n        }\n      }\n    };\n\n    this.evaluate = () => {\n      if (this.state.topLeftValue === this.state.topCenterValue && this.state.topLeftValue === this.state.topRightValue && this.state.topLeftValue !== \" \" || this.state.centerLeftValue === this.state.centerCenterValue && this.state.centerLeftValue === this.state.centerRightValue && this.state.centerLeftValue !== \" \" || this.state.bottomLeftValue === this.state.bottomCenterValue && this.state.bottomLeftValue === this.state.bottomRightValue && this.state.bottomLeftValue !== \" \" || this.state.topLeftValue === this.state.centerLeftValue && this.state.topLeftValue === this.state.bottomLeftValue && this.state.topLeftValue !== \" \" || this.state.topCenterValue === this.state.centerCenterValue && this.state.topCenterValue === this.state.bottomCenterValue && this.state.topCenterValue !== \" \" || this.state.topRightValue === this.state.centerRightValue && this.state.topRightValue === this.state.bottomRightValue && this.state.topRightValue !== \" \" || this.state.topLeftValue === this.state.centerCenterValue && this.state.topLeftValue === this.state.bottomRightValue && this.state.topLeftValue !== \" \" || this.state.topRightValue === this.state.centerCenterValue && this.state.topRightValue === this.state.bottomLeftValue && this.state.topRightValue !== \" \") {\n        if (this.state.move == 1) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 203\n            },\n            __self: this\n          }, \"O's Win!\");\n        } else {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 206\n            },\n            __self: this\n          }, \"X's Win!\");\n        }\n      } else {\n        if (this.state.topLeftValue !== \" \" && this.state.topCenterValue !== \" \" && this.state.topRightValue !== \" \" && this.state.centerLeftValue !== \" \" && this.state.centerCenterValue !== \" \" && this.state.centerRightValue !== \" \" && this.state.bottomLeftValue !== \" \" && this.state.bottomCenterValue !== \" \" && this.state.bottomRightValue !== \" \") {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 215\n            },\n            __self: this\n          }, \"It's a Draw!\");\n        }\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, \"~~~~~~~~~~~~\");\n    };\n\n    this.resetGame = () => {\n      this.setState(() => {\n        return {\n          move: 0,\n          topLeftValue: \" \",\n          topCenterValue: \" \",\n          topRightValue: \" \",\n          centerLeftValue: \" \",\n          centerCenterValue: \" \",\n          centerRightValue: \" \",\n          bottomLeftValue: \" \",\n          bottomCenterValue: \" \",\n          bottomRightValue: \" \"\n        };\n      });\n    };\n\n    this.cpuMove = () => {\n      if (this.state.move === 1 && !vsHuman) {\n        let move = util.myAdversary(this.state, 1)[0];\n\n        if (move === 'tl') {\n          this.updateValue('topLeft');\n        }\n\n        if (move === 'tc') {\n          this.updateValue('topCenter');\n        }\n\n        if (move === 'tr') {\n          this.updateValue('topRight');\n        }\n\n        if (move === 'cl') {\n          this.updateValue('centerLeft');\n        }\n\n        if (move === 'cc') {\n          this.updateValue('centerCenter');\n        }\n\n        if (move === 'cr') {\n          this.updateValue('centerRight');\n        }\n\n        if (move === 'bl') {\n          this.updateValue('bottomLeft');\n        }\n\n        if (move === 'bc') {\n          this.updateValue('bottomCenter');\n        }\n\n        if (move === 'br') {\n          this.updateValue('bottomRight');\n        }\n      }\n    };\n\n    this.opponent = () => {\n      vsHuman = !vsHuman;\n      this.resetGame();\n    };\n\n    this.state = {\n      move: 0,\n      topLeftValue: \" \",\n      topCenterValue: \" \",\n      topRightValue: \" \",\n      centerLeftValue: \" \",\n      centerCenterValue: \" \",\n      centerRightValue: \" \",\n      bottomLeftValue: \" \",\n      bottomCenterValue: \" \",\n      bottomRightValue: \" \"\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"columns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, React.createElement(TopLeft, {\n      move: this.state.move,\n      value: this.state.topLeftValue,\n      updateValue: location => this.updateValue(location),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }), React.createElement(TopCenter, {\n      move: this.state.move,\n      value: this.state.topCenterValue,\n      updateValue: location => this.updateValue(location),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }), React.createElement(TopRight, {\n      move: this.state.move,\n      value: this.state.topRightValue,\n      updateValue: location => this.updateValue(location),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"columns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, React.createElement(CenterLeft, {\n      move: this.state.move,\n      value: this.state.centerLeftValue,\n      updateValue: location => this.updateValue(location),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }), React.createElement(CenterCenter, {\n      move: this.state.move,\n      value: this.state.centerCenterValue,\n      updateValue: location => this.updateValue(location),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }), React.createElement(CenterRight, {\n      move: this.state.move,\n      value: this.state.centerRightValue,\n      updateValue: location => this.updateValue(location),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"columns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, React.createElement(BottomLeft, {\n      move: this.state.move,\n      value: this.state.bottomLeftValue,\n      updateValue: location => this.updateValue(location),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }), React.createElement(BottomCenter, {\n      move: this.state.move,\n      value: this.state.bottomCenterValue,\n      updateValue: location => this.updateValue(location),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }), React.createElement(BottomRight, {\n      move: this.state.move,\n      value: this.state.bottomRightValue,\n      updateValue: location => this.updateValue(location),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, \" \", this.evaluate(), \" \"), React.createElement(\"div\", {\n      class: \"resetButton\",\n      onClick: () => this.resetGame(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, \"Reset\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      class: \"switch\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      class: \"slider\",\n      onClick: () => this.opponent(),\n      style: {\n        marginTop: \"-5%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    })))), this.cpuMove());\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["C:/Users/brend/Documents/Professional/my-app/src/tictactoe/game.js"],"names":["React","TopLeft","TopCenter","TopRight","CenterLeft","CenterCenter","CenterRight","BottomLeft","BottomCenter","BottomRight","util","vsHuman","Game","Component","constructor","props","updateValue","location","state","move","topLeftValue","setState","topCenterValue","topRightValue","centerLeftValue","centerCenterValue","centerRightValue","bottomLeftValue","bottomCenterValue","bottomRightValue","evaluate","resetGame","cpuMove","myAdversary","opponent","render","marginTop"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './game.css';\nimport TopLeft from './boxes/TopLeft.js'\nimport TopCenter from './boxes/TopCenter.js'\nimport TopRight from './boxes/TopRight.js'\n\nimport CenterLeft from './boxes/CenterLeft.js'\nimport CenterCenter from './boxes/CenterCenter.js'\nimport CenterRight from './boxes/CenterRight.js'\n\nimport BottomLeft from './boxes/BottomLeft.js'\nimport BottomCenter from './boxes/BottomCenter.js'\nimport BottomRight from './boxes/BottomRight.js'\n\nimport 'bulma/css/bulma.css'\nimport * as util from './util/adversary';\n\nlet vsHuman = true;\n\nclass Game extends React.Component{\n  constructor(props){\n      super(props)\n      this.state = {\n        move: 0,\n        topLeftValue: \" \",\n        topCenterValue: \" \",\n        topRightValue: \" \",\n        centerLeftValue: \" \",\n        centerCenterValue: \" \",\n        centerRightValue: \" \",\n        bottomLeftValue: \" \",\n        bottomCenterValue: \" \",\n        bottomRightValue: \" \"\n      }\n  }\n  updateValue = (location) => {\n\n    if(this.state.move === 0){\n      //TOPLEFT\n      if(location === 'topLeft'){\n        if(this.state.topLeftValue === \" \"){\n          this.setState(() => {\n            return {topLeftValue: 'O', move: 1};\n          });\n        }\n      }\n      //TOPCENTER\n      if(location === 'topCenter'){\n        if(this.state.topCenterValue === \" \"){\n          this.setState(() => {\n            return {topCenterValue: 'O', move: 1};\n          });\n        }\n      }\n      //TOPRIGHT\n      if(location === 'topRight'){\n        if(this.state.topRightValue === \" \"){\n          this.setState(() => {\n            return {topRightValue: 'O', move: 1};\n          });\n        }\n      }\n      //centerLEFT\n      if(location === 'centerLeft'){\n        if(this.state.centerLeftValue === \" \"){\n          this.setState(() => {\n            return {centerLeftValue: 'O', move: 1};\n          });\n        }\n      }\n      //centerCENTER\n      if(location === 'centerCenter'){\n        if(this.state.centerCenterValue === \" \"){\n          this.setState(() => {\n            return {centerCenterValue: 'O', move: 1};\n          });\n        }\n      }\n      //centerRIGHT\n      if(location === 'centerRight'){\n        if(this.state.centerRightValue === \" \"){\n          this.setState(() => {\n            return {centerRightValue: 'O', move: 1};\n          });\n        }\n      }\n      //bottomLEFT\n      if(location === 'bottomLeft'){\n        if(this.state.bottomLeftValue === \" \"){\n          this.setState(() => {\n            return {bottomLeftValue: 'O', move: 1};\n          });\n        }\n      }\n      //bottomCENTER\n      if(location === 'bottomCenter'){\n        if(this.state.bottomCenterValue === \" \"){\n          this.setState(() => {\n            return {bottomCenterValue: 'O', move: 1};\n          });\n        }\n      }\n      //bottomRIGHT\n      if(location === 'bottomRight'){\n        if(this.state.bottomRightValue === \" \"){\n          this.setState(() => {\n            return {bottomRightValue: 'O', move: 1};\n          });\n        }\n      }\n\n\n    }\n    else{\n      //TOPLEFT\n      if(location === 'topLeft'){\n        if(this.state.topLeftValue === \" \"){\n          this.setState(() => {\n            return {topLeftValue: 'X', move: 0};\n          });\n        }\n      }\n      //TOPCENTER\n      if(location === 'topCenter'){\n        if(this.state.topCenterValue === \" \"){\n          this.setState(() => {\n            return {topCenterValue: 'X', move: 0};\n          });\n        }\n      }\n      //TOPRIGHT\n      if(location === 'topRight'){\n        if(this.state.topRightValue === \" \"){\n          this.setState(() => {\n            return {topRightValue: 'X', move: 0};\n          });\n        }\n      }\n      //centerLEFT\n      if(location === 'centerLeft'){\n        if(this.state.centerLeftValue === \" \"){\n          this.setState(() => {\n            return {centerLeftValue: 'X', move: 0};\n          });\n        }\n      }\n      //centerCENTER\n      if(location === 'centerCenter'){\n        if(this.state.centerCenterValue === \" \"){\n          this.setState(() => {\n            return {centerCenterValue: 'X', move: 0};\n          });\n        }\n      }\n      //centerRIGHT\n      if(location === 'centerRight'){\n        if(this.state.centerRightValue === \" \"){\n          this.setState(() => {\n            return {centerRightValue: 'X', move: 0};\n          });\n        }\n      }\n      //bottomLEFT\n      if(location === 'bottomLeft'){\n        if(this.state.bottomLeftValue === \" \"){\n          this.setState(() => {\n            return {bottomLeftValue: 'X', move: 0};\n          });\n        }\n      }\n      //bottomCENTER\n      if(location === 'bottomCenter'){\n        if(this.state.bottomCenterValue === \" \"){\n          this.setState(() => {\n            return {bottomCenterValue: 'X', move: 0};\n          });\n        }\n      }\n      //bottomRIGHT\n      if(location === 'bottomRight'){\n        if(this.state.bottomRightValue === \" \"){\n          this.setState(() => {\n            return {bottomRightValue: 'X', move: 0};\n          });\n        }\n      }\n    }\n\n  }\n\n  evaluate = () =>{\n    if(\n      ((this.state.topLeftValue === this.state.topCenterValue) && (this.state.topLeftValue  === this.state.topRightValue) && (this.state.topLeftValue !== \" \")) ||\n      ((this.state.centerLeftValue === this.state.centerCenterValue) && (this.state.centerLeftValue === this.state.centerRightValue) && (this.state.centerLeftValue !== \" \")) ||\n      ((this.state.bottomLeftValue === this.state.bottomCenterValue) && (this.state.bottomLeftValue === this.state.bottomRightValue) && (this.state.bottomLeftValue !== \" \")) ||\n      ((this.state.topLeftValue === this.state.centerLeftValue) && (this.state.topLeftValue  === this.state.bottomLeftValue) && (this.state.topLeftValue !== \" \")) ||\n      ((this.state.topCenterValue === this.state.centerCenterValue) && (this.state.topCenterValue === this.state.bottomCenterValue) && (this.state.topCenterValue !== \" \")) ||\n      ((this.state.topRightValue === this.state.centerRightValue) && (this.state.topRightValue  === this.state.bottomRightValue) && (this.state.topRightValue!== \" \")) ||\n      ((this.state.topLeftValue === this.state.centerCenterValue) && (this.state.topLeftValue  === this.state.bottomRightValue) && (this.state.topLeftValue !== \" \")) ||\n      ((this.state.topRightValue === this.state.centerCenterValue) && (this.state.topRightValue === this.state.bottomLeftValue) && (this.state.topRightValue !== \" \"))\n    ){\n      if(this.state.move == 1){\n        return <div>O's Win!</div>\n      }\n      else{\n        return <div>X's Win!</div>\n      }\n    }\n    else{\n      if(\n        (this.state.topLeftValue !== \" \") && (this.state.topCenterValue !== \" \") && (this.state.topRightValue !== \" \") &&\n        (this.state.centerLeftValue !== \" \") && (this.state.centerCenterValue !== \" \") && (this.state.centerRightValue !== \" \") &&\n        (this.state.bottomLeftValue !== \" \") && (this.state.bottomCenterValue !== \" \") && (this.state.bottomRightValue !== \" \")\n      ){\n        return <div>It's a Draw!</div>\n      }\n    }\n    return <div>~~~~~~~~~~~~</div>\n  }\n\n  resetGame = () => {\n    this.setState(() => {\n      return {\n        move: 0,\n        topLeftValue: \" \",\n        topCenterValue: \" \",\n        topRightValue: \" \",\n        centerLeftValue: \" \",\n        centerCenterValue: \" \",\n        centerRightValue: \" \",\n        bottomLeftValue: \" \",\n        bottomCenterValue: \" \",\n        bottomRightValue: \" \"\n      };\n    });\n  }\n\n  cpuMove = () => {\n    if(this.state.move===1 && !vsHuman){\n      let move = util.myAdversary(this.state, 1)[0]\n      if(move === 'tl'){\n        this.updateValue('topLeft')\n      }\n      if(move === 'tc'){\n        this.updateValue('topCenter')\n      }\n      if(move === 'tr'){\n        this.updateValue('topRight')\n      }\n      if(move === 'cl'){\n        this.updateValue('centerLeft')\n      }\n      if(move === 'cc'){\n        this.updateValue('centerCenter')\n      }\n      if(move === 'cr'){\n        this.updateValue('centerRight')\n      }\n      if(move === 'bl'){\n        this.updateValue('bottomLeft')\n      }\n      if(move === 'bc'){\n        this.updateValue('bottomCenter')\n      }\n      if(move === 'br'){\n        this.updateValue('bottomRight')\n      }\n    }\n  }\n\n  opponent = () =>{\n    vsHuman = !vsHuman;\n    this.resetGame();\n  }\n  render(){\n\n      return (\n          <div className=\"App\">\n            <div className = \"section\">\n                <div className = \"columns\">\n                    <TopLeft move = {this.state.move} value = {this.state.topLeftValue} updateValue = {(location) => this.updateValue(location)}/>\n                    <TopCenter move = {this.state.move} value = {this.state.topCenterValue} updateValue = {(location) => this.updateValue(location)}/>\n                    <TopRight move = {this.state.move} value = {this.state.topRightValue} updateValue = {(location) => this.updateValue(location)}/>\n                </div>\n\n                <div className = \"columns\">\n                    <CenterLeft move = {this.state.move} value = {this.state.centerLeftValue} updateValue = {(location) => this.updateValue(location)}/>\n                    <CenterCenter move = {this.state.move} value = {this.state.centerCenterValue} updateValue = {(location) => this.updateValue(location)}/>\n                    <CenterRight move = {this.state.move} value = {this.state.centerRightValue} updateValue = {(location) => this.updateValue(location)}/>\n                </div>\n\n                <div className = \"columns\">\n                    <BottomLeft move = {this.state.move} value = {this.state.bottomLeftValue} updateValue = {(location) => this.updateValue(location)}/>\n                    <BottomCenter move = {this.state.move} value = {this.state.bottomCenterValue} updateValue = {(location) => this.updateValue(location)}/>\n                    <BottomRight move = {this.state.move} value = {this.state.bottomRightValue} updateValue = {(location) => this.updateValue(location)}/>\n                </div>\n                <div className = \"status\"> {this.evaluate()} </div>\n\n                <div class=\"resetButton\" onClick = {() => this.resetGame()}>Reset</div>\n\n             </div>\n             <div>\n               <div>\n                <label class=\"switch\">\n                  <input type=\"checkbox\"/>\n                    <span class=\"slider\" onClick = {() => this.opponent()} style={{marginTop:\"-5%\"}}></span>\n                </label>\n              </div>\n\n             </div>\n            {this.cpuMove()}\n          </div>\n        );\n  }\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}